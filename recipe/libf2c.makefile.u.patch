--- libf2c/makefile.u	2008-11-27 01:20:03.000000000 -0500
+++ libf2c/Makefile	2022-04-22 11:08:24.000000000 -0400
@@ -13,21 +13,36 @@
 # to the CFLAGS = line below.
 
 .SUFFIXES: .c .o
-CC = cc
 SHELL = /bin/sh
-CFLAGS = -O
+CFLAGS = -O -fPIC
+OS = $(shell uname)
+INCTARGETS = f2c.h
+LIBTARGET = libf2c.a
+
+ifeq ($(OS), Darwin)
+	SHAREDLIBTARGET = libf2c.dylib
+else
+	SHAREDLIBTARGET = libf2c.so
+endif
+
+TARGETS = $(INCTARGETS)
+TARGETS += signal1.h sysdep1.h
+
+TARGETS += $(LIBTARGET)
+TARGETS += $(SHAREDLIBTARGET)
+
 
 # compile, then strip unnecessary symbols
 .c.o:
 	$(CC) -c -DSkip_f2c_Undefs $(CFLAGS) $*.c
-	ld -r -x -o $*.xxx $*.o
+	$(LD) -r -x -o $*.xxx $*.o
 	mv $*.xxx $*.o
 ## Under Solaris (and other systems that do not understand ld -x),
 ## omit -x in the ld line above.
 ## If your system does not have the ld command, comment out
 ## or remove both the ld and mv lines above.
 
-MISC =	f77vers.o i77vers.o main.o s_rnge.o abort_.o exit_.o getarg_.o iargc_.o\
+MISC =	f77vers.o i77vers.o main.o MAIN_stub.o s_rnge.o abort_.o exit_.o getarg_.o iargc_.o\
 	getenv_.o signal_.o s_stop.o s_paus.o system_.o cabs.o ctype.o\
 	derf_.o derfc_.o erf_.o erfc_.o sig_die.o uninit.o
 POW =	pow_ci.o pow_dd.o pow_di.o pow_hh.o pow_ii.o pow_ri.o pow_zi.o pow_zz.o
@@ -69,11 +84,11 @@
 OFILES = $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
 	$(HALF) $(CMP) $(EFL) $(CHAR) $(I77) $(TIME)
 
-all: f2c.h signal1.h sysdep1.h libf2c.a
+all: $(TARGETS)
 
 libf2c.a: $(OFILES)
-	ar r libf2c.a $?
-	-ranlib libf2c.a
+	$(AR) r libf2c.a $?
+	-$(RANLIB) libf2c.a
 
 ## Shared-library variant: the following rule works on Linux
 ## systems.  Details are system-dependent.  Under Linux, -fPIC
@@ -86,7 +101,10 @@
 ## arrange for $DYLD_LIBRARY_PATH to include the directory containing libf2c.so.
 
 libf2c.so: $(OFILES)
-	$(CC) -shared -o libf2c.so $(OFILES)
+	$(CC) -shared -dynamiclib -o libf2c.so $(OFILES)
+
+libf2c.dylib: $(OFILES)
+	$(CC) -dynamiclib -undefined dynamic_lookup -single_module -o libf2c.dylib $(OFILES) -install_name @rpath/libf2c.dylib
 
 ### If your system lacks ranlib, you don't need it; see README.
 
@@ -121,12 +139,18 @@
 #main.o: main.c
 #	$(CC) -c -Donexit=on_exit -DSkip_f2c_Undefs main.c
 
-install: libf2c.a
-	cp libf2c.a $(LIBDIR)
-	-ranlib $(LIBDIR)/libf2c.a
+install: $(TARGETS)
+	-mkdir -p $(LIBDIR)
+	cp $(LIBTARGET) $(LIBDIR)
+	$(RANLIB) $(LIBDIR)/libf2c.a
+	cp $(SHAREDLIBTARGET) $(LIBDIR)
+	-mkdir -p $(INCDIR)
+	cp f2c.h $(INCDIR)
 
 clean:
-	rm -f libf2c.a *.o arith.h signal1.h sysdep1.h
+	rm -f libf2c.a libf2c.dylib libf2c.so *.o arith.h signal1.h sysdep1.h
+
+distclean: clean
 
 backspac.o:	fio.h
 close.o:	fio.h
@@ -183,8 +207,8 @@
 xwsne.o:	fmt.h
 
 arith.h: arithchk.c
-	$(CC) $(CFLAGS) -DNO_FPINIT arithchk.c -lm ||\
-	 $(CC) -DNO_LONG_LONG $(CFLAGS) -DNO_FPINIT arithchk.c -lm
+	$(CC_FOR_BUILD) -DNO_FPINIT arithchk.c -lm ||\
+	$(CC_FOR_BUILD) -DNO_LONG_LONG -DNO_FPINIT arithchk.c -lm
 	./a.out >arith.h
 	rm -f a.out arithchk.o
 
@@ -204,7 +228,7 @@
 	i77vers.c i_abs.c i_dim.c i_dnnt.c i_indx.c i_len.c i_mod.c \
 	i_nint.c i_sign.c iargc_.c iio.c ilnw.c inquire.c l_ge.c l_gt.c \
 	l_le.c l_lt.c lbitbits.c lbitshft.c libf2c.lbc libf2c.sy lio.h \
-	lread.c lwrite.c main.c makefile.sy makefile.u makefile.vc \
+	lread.c lwrite.c main.c MAIN_stub.c makefile.sy makefile.u makefile.vc \
 	makefile.wat math.hvc mkfile.plan9 open.c pow_ci.c pow_dd.c \
 	pow_di.c pow_hh.c pow_ii.c pow_qq.c pow_ri.c pow_zi.c pow_zz.c \
 	qbitbits.c qbitshft.c r_abs.c r_acos.c r_asin.c r_atan.c r_atn2.c \
